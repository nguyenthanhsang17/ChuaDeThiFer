{"ast":null,"code":"var _jsxFileName = \"D:\\\\FER\\\\FER202_FA24_PE_308767\\\\PaperNo_1\\\\All\\\\resource\\\\src\\\\page\\\\ListProduct.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport axios from \"axios\";\nimport { Card } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ListProduct() {\n  _s();\n  const [products, setProducts] = React.useState([]);\n  const [Category, setCategory] = React.useState([]);\n  const [Brand, setBrand] = React.useState([]);\n  const fetchProducts = async () => {\n    const ApiResponse = await axios.get('http://localhost:9999/product');\n    const products = ApiResponse.data;\n    setProducts(products);\n  };\n  const fetchCategorys = async () => {\n    const ApiResponse = await axios.get('http://localhost:9999/category');\n    const categorys = ApiResponse.data;\n    setCategory(categorys);\n  };\n  const fetchBrand = async () => {\n    const ApiResponse = await axios.get('http://localhost:9999/brand');\n    const brand = ApiResponse.data;\n    setBrand(brand);\n  };\n  const getBrandNameById = id => {\n    let i = 0;\n    for (i = 0; i < Brand.length; i++) {\n      if (Brand[i].id === id) {\n        console.log(i);\n        return Brand[i].name;\n      }\n    }\n    return \"uknow\";\n  };\n  useEffect(() => {\n    fetchProducts();\n    fetchCategorys();\n    fetchBrand();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"List of Products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), Category.map((e, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"Categories\",\n              type: \"radio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: e.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 70\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Brands\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), Brand.map((e, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"Brands\",\n              type: \"radio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: e.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 66\n            }, this)]\n          }, i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: products.map((e, i) => {\n            return /*#__PURE__*/_jsxDEV(Card, {\n              className: \"col-md-3\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                style: {\n                  textAlign: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  style: {\n                    width: '45%',\n                    height: '100px'\n                  },\n                  src: 'images/' + e.image\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: e.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: [\"Brand: \", Brand ? getBrandNameById(e.brand) : \"\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ListProduct, \"mypTx9WBgYKVyvQYnd0yRUO+jbQ=\");\n_c = ListProduct;\nvar _c;\n$RefreshReg$(_c, \"ListProduct\");","map":{"version":3,"names":["React","useEffect","axios","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","ListProduct","_s","products","setProducts","useState","Category","setCategory","Brand","setBrand","fetchProducts","ApiResponse","get","data","fetchCategorys","categorys","fetchBrand","brand","getBrandNameById","id","i","length","console","log","name","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","className","map","e","type","Header","width","height","src","image","Body","Title","title","Text","_c","$RefreshReg$"],"sources":["D:/FER/FER202_FA24_PE_308767/PaperNo_1/All/resource/src/page/ListProduct.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport axios from \"axios\";\r\nimport { Card } from 'react-bootstrap';\r\nexport default function ListProduct() {\r\n    const [products, setProducts] = React.useState([]);\r\n    const [Category, setCategory] = React.useState([]);\r\n    const [Brand, setBrand] = React.useState([]);\r\n\r\n    const fetchProducts = async () => {\r\n        const ApiResponse = await axios.get('http://localhost:9999/product');\r\n        const products = ApiResponse.data;\r\n        setProducts(products);\r\n    }\r\n\r\n    const fetchCategorys = async () => {\r\n        const ApiResponse = await axios.get('http://localhost:9999/category');\r\n        const categorys = ApiResponse.data;\r\n        setCategory(categorys);\r\n    }\r\n\r\n    const fetchBrand = async () => {\r\n        const ApiResponse = await axios.get('http://localhost:9999/brand');\r\n        const brand = ApiResponse.data;\r\n        setBrand(brand);\r\n    }\r\n\r\n\r\n    const getBrandNameById = (id) => {\r\n        let i = 0;\r\n        for(i=0;i<Brand.length;i++){\r\n            if(Brand[i].id === id){\r\n                console.log(i);\r\n                return Brand[i].name;\r\n            }\r\n        }\r\n        return \"uknow\";\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        fetchProducts();\r\n        fetchCategorys();\r\n        fetchBrand();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 style={{ textAlign: 'center' }}>List of Products</h3>\r\n\r\n            <div className='row'>\r\n                <div className='col-md-4'>\r\n                    <div >Categories</div>\r\n                    {Category.map((e, i) => {\r\n                        return (<div key={i}>\r\n                            <input name='Categories' type='radio' /> <span>{e.name}</span>\r\n                        </div>)\r\n                    })}\r\n\r\n                    <div>Brands</div>\r\n                    {Brand.map((e, i) => {\r\n                        return (<div key={i}>\r\n                            <input name='Brands' type='radio' /> <span>{e.name}</span>\r\n                        </div>)\r\n                    })}\r\n                </div>\r\n                <div className='col-md-8'>\r\n                    <div className='row' >\r\n                        {products.map((e, i) => {\r\n                            return (\r\n                                <Card className='col-md-3'>\r\n                                    <Card.Header style={{ textAlign: 'center' }}>\r\n                                        <img style={{ width: '45%', height: '100px' }} src={'images/' + e.image} />\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <Card.Title style={{ textAlign: 'center' }} >{e.title}</Card.Title>\r\n                                        <Card.Text>Brand: {Brand?getBrandNameById(e.brand):\"\"}</Card.Text> \r\n\r\n\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            )\r\n                        })}\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACvC,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,KAAK,CAACY,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMK,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,WAAW,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,+BAA+B,CAAC;IACpE,MAAMT,QAAQ,GAAGQ,WAAW,CAACE,IAAI;IACjCT,WAAW,CAACD,QAAQ,CAAC;EACzB,CAAC;EAED,MAAMW,cAAc,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMH,WAAW,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,gCAAgC,CAAC;IACrE,MAAMG,SAAS,GAAGJ,WAAW,CAACE,IAAI;IAClCN,WAAW,CAACQ,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAML,WAAW,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,6BAA6B,CAAC;IAClE,MAAMK,KAAK,GAAGN,WAAW,CAACE,IAAI;IAC9BJ,QAAQ,CAACQ,KAAK,CAAC;EACnB,CAAC;EAGD,MAAMC,gBAAgB,GAAIC,EAAE,IAAK;IAC7B,IAAIC,CAAC,GAAG,CAAC;IACT,KAAIA,CAAC,GAAC,CAAC,EAACA,CAAC,GAACZ,KAAK,CAACa,MAAM,EAACD,CAAC,EAAE,EAAC;MACvB,IAAGZ,KAAK,CAACY,CAAC,CAAC,CAACD,EAAE,KAAKA,EAAE,EAAC;QAClBG,OAAO,CAACC,GAAG,CAACH,CAAC,CAAC;QACd,OAAOZ,KAAK,CAACY,CAAC,CAAC,CAACI,IAAI;MACxB;IACJ;IACA,OAAO,OAAO;EAClB,CAAC;EAGD9B,SAAS,CAAC,MAAM;IACZgB,aAAa,CAAC,CAAC;IACfI,cAAc,CAAC,CAAC;IAChBE,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIlB,OAAA,CAAAE,SAAA;IAAAyB,QAAA,gBACI3B,OAAA;MAAI4B,KAAK,EAAE;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAF,QAAA,EAAC;IAAgB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEzDjC,OAAA;MAAKkC,SAAS,EAAC,KAAK;MAAAP,QAAA,gBAChB3B,OAAA;QAAKkC,SAAS,EAAC,UAAU;QAAAP,QAAA,gBACrB3B,OAAA;UAAA2B,QAAA,EAAM;QAAU;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACrBzB,QAAQ,CAAC2B,GAAG,CAAC,CAACC,CAAC,EAAEd,CAAC,KAAK;UACpB,oBAAQtB,OAAA;YAAA2B,QAAA,gBACJ3B,OAAA;cAAO0B,IAAI,EAAC,YAAY;cAACW,IAAI,EAAC;YAAO;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,KAAC,eAAAjC,OAAA;cAAA2B,QAAA,EAAOS,CAAC,CAACV;YAAI;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GADhDX,CAAC;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CAAC;QACV,CAAC,CAAC,eAEFjC,OAAA;UAAA2B,QAAA,EAAK;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAChBvB,KAAK,CAACyB,GAAG,CAAC,CAACC,CAAC,EAAEd,CAAC,KAAK;UACjB,oBAAQtB,OAAA;YAAA2B,QAAA,gBACJ3B,OAAA;cAAO0B,IAAI,EAAC,QAAQ;cAACW,IAAI,EAAC;YAAO;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,KAAC,eAAAjC,OAAA;cAAA2B,QAAA,EAAOS,CAAC,CAACV;YAAI;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA,GAD5CX,CAAC;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEd,CAAC;QACV,CAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNjC,OAAA;QAAKkC,SAAS,EAAC,UAAU;QAAAP,QAAA,eACrB3B,OAAA;UAAKkC,SAAS,EAAC,KAAK;UAAAP,QAAA,EACftB,QAAQ,CAAC8B,GAAG,CAAC,CAACC,CAAC,EAAEd,CAAC,KAAK;YACpB,oBACItB,OAAA,CAACF,IAAI;cAACoC,SAAS,EAAC,UAAU;cAAAP,QAAA,gBACtB3B,OAAA,CAACF,IAAI,CAACwC,MAAM;gBAACV,KAAK,EAAE;kBAAEC,SAAS,EAAE;gBAAS,CAAE;gBAAAF,QAAA,eACxC3B,OAAA;kBAAK4B,KAAK,EAAE;oBAAEW,KAAK,EAAE,KAAK;oBAAEC,MAAM,EAAE;kBAAQ,CAAE;kBAACC,GAAG,EAAE,SAAS,GAAGL,CAAC,CAACM;gBAAM;kBAAAZ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClE,CAAC,eACdjC,OAAA,CAACF,IAAI,CAAC6C,IAAI;gBAAAhB,QAAA,gBACN3B,OAAA,CAACF,IAAI,CAAC8C,KAAK;kBAAChB,KAAK,EAAE;oBAAEC,SAAS,EAAE;kBAAS,CAAE;kBAAAF,QAAA,EAAGS,CAAC,CAACS;gBAAK;kBAAAf,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAa,CAAC,eACnEjC,OAAA,CAACF,IAAI,CAACgD,IAAI;kBAAAnB,QAAA,GAAC,SAAO,EAACjB,KAAK,GAACU,gBAAgB,CAACgB,CAAC,CAACjB,KAAK,CAAC,GAAC,EAAE;gBAAA;kBAAAW,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAG3D,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC;UAEf,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA,eAER,CAAC;AAEX;AAAC7B,EAAA,CAvFuBD,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}